{% case section.settings.grid %}
  {% when 2 %}
    {%- assign grid_item_width = 'medium-up--one-half small--one-half mobile--nine-tenths' -%}
  {% when 3 %}
    {%- assign grid_item_width = 'large-up--one-third medium--one-half small--one-half mobile--nine-tenths' -%}
  {% when 4 %}
    {%- assign grid_item_width = 'large-up--one-quarter medium--one-half small--one-half mobile--nine-tenths' -%}
  {% when 5 %}
    {%- assign grid_item_width = 'large-up--one-fifth medium--one-half small--one-half mobile--nine-tenths' -%}
  {% when 6 %}
    {%- assign grid_item_width = 'large-up--one-sixth medium--one-half small--one-half mobile--nine-tenths' -%}
  {% when 7 %}
    {%- assign grid_item_width = 'large-up--one-seventh medium--one-half small--one-half mobile--nine-tenths' -%}
  {% when 8 %}
    {%- assign grid_item_width = 'large-up--one-eighth medium--one-half small--one-half mobile--nine-tenths' -%}
{% endcase %}

<div class="grid__item {{ grid_item_width }}" {{ block.shopify_attributes }} {% if block.settings.content_color %}
  style="--block-text:{{ block.settings.content_color }}"{% endif %}
  {% if section.settings.enable_slider %}data-slide="{{ block.id }}" data-slide-index="{{ forloop.index0 }}"{% endif %}>
  <div class="collection-grid-item section--image {{ section.settings.place_text }} {{ section.settings.align_text }}">
    {%- liquid
            assign collection = collections[block.settings.collection]
            if block.settings.collection_image
              assign img_object = block.settings.collection_image
            elsif collection.image
              assign img_object = collection.image
            elsif collection.products.first
              assign img_object = collection.products.first.featured_media.preview_image
            endif
      
            assign collection_link = collection.url | default: '#'
            if block.settings.link_override != blank
                assign collection_link = block.settings.link_override
            endif
            
            assign collection_def_title =  'homepage.onboarding.collection_title' | t
      
            assign collection_title = collection.title | default: collection_def_title
            if block.settings.text != '' and block.settings.text != '<p></p>' and block.settings.text != blank
              assign collection_title = block.settings.text
            endif 
      
            assign aspect_ratio = section.settings.aspect_ratio | default: 0.6 
          -%}

    <a href="{{ collection_link }}" class="link-over-image" aria-label="{{ collection_title | strip_html | escape }}"></a>

    {%- if img_object != blank -%}
      {%- assign default_image = 'blank.svg' | asset_url -%}
      {%- assign image = img_object | default: default_image -%}
      {%- assign bg_position = bg_position | default: "center-top" -%}

      <div class="image__fill" 
          style="padding-top: {{ 1 | divided_by: image.aspect_ratio | times: 100 }}%; background-image: url('{{ image | img_url: '1x1' }}');">
        <div class="background-size-cover lazyload" data-bgset="{% render 'bgset', image: image %}" style="background-position: {{ bg_position | replace: '-', ' ' }};" role="img" aria-label="{{ image.alt | strip_html | escape }}"></div>
        <noscript>
          <img src="{{ image | img_url: '720x' }}" alt="{{ image.alt | strip_html | escape }}" class="responsive-wide-image"/>
        </noscript>
      </div>
    {%- else -%}
      <div class="image__fill" style="padding-top: {{ aspect_ratio | times: 100 }}%">
        <div class="background-size-cover">
          <span>
            {% capture svg_name %}collection-{{ forloop.index | modulo: 7 | at_least: 1 }}
            {% endcapture %}
            {{ svg_name | placeholder_svg_tag: 'placeholder-svg' }}
          </span>
        </div>
      </div>
    {%- endif -%}

    <div class="collection-grid-item__content__wrapper" {% if block.settings.content_bg %}style="background-color: {{ block.settings.content_bg }};"{% endif %}>
      <div class="collection-grid-bunding__content">
        <div class="collection-grid-bunding__title">{{ collection_title }}
        </div>
        <div class="collection-grid-bunding__price">{{ block.settings.price }}
        </div>
        <div class="collection-grid-flash-sale__claimed">
          <p> <span id="sale__countdown-flash-sale-claimed-{{ forloop.index }}">0</span> out of 1000 claimed</p>
        </div>
        <div id="sale__countdown-item-{{ forloop.index }}" class="collection-grid-flash-sale__countdown" >00:00:00</div>
        {% if section.settings.show_button %}
          <div class="collection-grid-bunding__Buynow">
            <a href="{{collection_link}}" class=" overlap__button btn btn--min btn--primary">Buy Now</a>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<script>
  countDown_flash_sale__{{ forloop.index  }}();

  function countDown_flash_sale__{{ forloop.index }}(){
    function addZero(i) {
      return i < 10 ? "0" + i : i;
    }

    let activityText = document.querySelector('#sale__countdown-item-{{ forloop.index }}');
    let outOfClaimed = document.querySelector('#sale__countdown-flash-sale-claimed-{{ forloop.index }}');
    let timer = null;
    const startTime = new Date();
    const endTime = new Date('{{ block.settings.end_date }} 23:59:59');
    const nowTime = new Date();
    const beginDiff = parseInt((startTime.getTime() - nowTime.getTime()) / 1000);
    const endDiff = parseInt((endTime.getTime() - nowTime.getTime()) / 1000);
    const leftTime = beginDiff > 0 ? beginDiff : endDiff;
    let day = parseInt(leftTime / (24 * 60 * 60))
    let hour = parseInt(leftTime / (60 * 60) % 24);
    let minute = parseInt(leftTime / 60 % 60);
    let second = parseInt(leftTime % 60);

    outOfClaimed.innerText = `${1000 - parseInt( leftTime / 60 % 1000)  }`;

    day = addZero(day);
    hour = addZero(hour);
    minute = addZero(minute);
    second = addZero(second);
    let hours = Number(day * 24) + Number(hour);

    if (beginDiff > 0) {
      activityText.innerText = `${hours}:${minute}:${second}`;
      timer = setTimeout(countDown_flash_sale__{{ forloop.index  }}, 1000);
    } else if (leftTime <= 0) {
      activityText.innerText = '00:00:00';
      clearTimeout(timer);
    } else {
      activityText.innerText = `${hours}:${minute}:${second}`;
      timer = setTimeout(countDown_flash_sale__{{ forloop.index  }}, 1000);
    }
    
  }

</script>